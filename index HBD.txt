<!DOCTYPE html>
<html lang="th">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Happy Birthday! ‡∏™‡∏∏‡∏Ç‡∏™‡∏±‡∏ô‡∏ï‡πå‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î</title>
    <style>
        /* --- CSS: ‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î --- */
        
        /* 1. ‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô */
        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
            background-color: #fce4ec; /* ‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π‡∏≠‡πà‡∏≠‡∏ô‡∏°‡∏≤‡∏Å */
            display: flex;
            justify-content: center;
            align-items: center;
            /* ‡πÉ‡∏ä‡πâ min-height ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏û‡∏≠‡∏î‡∏µ‡∏Å‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÅ‡∏•‡∏∞‡∏ó‡∏∏‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå */
            min-height: 100vh; 
            margin: 0;
            text-align: center;
        }
        .screen {
            background-color: white;
            padding: 20px 15px;
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0 0 0 / 10%);
            width: 300px;
            box-sizing: border-box;
            max-width: 95%; 
            margin: 20px 0;
        }
        .hidden {
            display: none !important;
        }
        
        /* 2. ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏û‡∏≤‡∏™‡πÇ‡∏Ñ‡πâ‡∏î */
        #passcode-screen h2 {
            color: #d81b60; 
            margin-top: 0; 
            font-size: 1.5rem;
        }
        #passcode-screen p {
            font-size: 0.9rem;
            color: #666;
            margin-bottom: 15px; 
        }
        #small-cake {
            font-size: 3rem;
            margin-bottom: 15px; 
            display: block;
        }
        
        /* 3. ‡πÅ‡∏õ‡πâ‡∏ô‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç */
        #passcode-display {
            background-color: #f9f9f9;
            border: 2px solid #f8bbd0;
            border-radius: 15px;
            height: 50px;
            width: 90%; 
            margin: 15px auto; 
            font-size: 2.2rem;
            line-height: 50px;
            color: #555;
            box-sizing: border-box;
            padding: 0 5px; 
            user-select: none;
            display: flex;
            justify-content: space-around; 
            align-items: center;
            text-align: center;
        }
        .passcode-digit {
            /* ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πà‡∏≠ 1 ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç */
            width: 8%; 
            border-bottom: 3px solid #d81b60;
            margin: 0 1px;
            height: 35px; 
            line-height: 35px;
            font-weight: bold;
        }
        .keypad {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 10px; 
            max-width: 240px;
            margin: 15px auto; 
        }
        .key, .key-control {
            font-size: 1.4rem; 
            background-color: #ff80ab; 
            color: white;
            border: none;
            border-radius: 50%;
            width: 60px; 
            height: 60px; 
            line-height: 60px;
            cursor: pointer;
            transition: background-color 0.2s, transform 0.1s;
            box-shadow: 0 3px 6px rgba(0 0 0 / 10%);
        }
        .key:active, .key-control:active {
            background-color: #f50057;
            transform: scale(0.95);
        }
        .keypad-controls button {
            background-color: transparent;
            color: #d81b60;
            font-size: 1rem;
            margin-top: 5px;
            border: none;
            padding: 8px 15px;
            cursor: pointer;
        }
        
        /* 4. ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏Ñ‡πâ‡∏Å */
        #cake-screen h2 {
            color: #d81b60;
        }
        #cake-container {
            position: relative;
            width: 100%; 
            height: 250px; 
            margin: 0 auto;
            cursor: pointer;
        }
        
        /* 4.1 ‡πÄ‡∏Ñ‡πâ‡∏Å SVG (3D Illusion) */
        #cake-svg {
            position: absolute;
            width: 100%;
            height: 100%;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%); 
        }

        /* 4.3 ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô (‡πÄ‡∏õ‡∏•‡∏ß‡πÑ‡∏ü‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡∏°‡πà) */
        .candle-flame {
            transition: opacity 0.3s;
            animation: flicker 0.5s infinite alternate; 
            transform-origin: 50% 100%; 
        }
        @keyframes flicker {
            0% { transform: scale(1) rotate(0deg); opacity: 0.9; }
            50% { transform: scale(1.05) rotate(1deg); opacity: 1; }
            100% { transform: scale(0.95) rotate(-1deg); opacity: 0.8; }
        }
        .candle {
            opacity: 0; 
            transition: opacity 0.5s;
        }

        /* 5. ‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏¢‡πâ‡∏≤‡∏¢‡∏°‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á */
        #small-letter {
            /* ‡∏•‡∏ö absolute positioning ‡πÄ‡∏î‡∏¥‡∏°‡∏≠‡∏≠‡∏Å */
            margin: 15px auto; /* ‡∏à‡∏±‡∏î‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á */
            display: block;
            cursor: pointer;
            z-index: 10; 
        }
        
        /* 6. ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ (‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏£‡∏∞‡∏¢‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡πâ‡∏Å) */
        #instruction-message {
            min-height: 50px; /* ‡∏à‡∏≠‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏ß‡πâ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ layout ‡∏Ç‡∏¢‡∏±‡∏ö */
            margin-top: 15px;
        }

        /* 7. ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏≠‡∏ß‡∏¢‡∏û‡∏£ */
        #card-screen {
            padding: 20px;
            background-color: white;
            max-width: 350px;
            width: 90%;
        }
        .card-content {
            border: 3px solid #f8bbd0;
            border-radius: 15px;
            padding: 20px;
            margin-top: 15px;
            background-color: #fffafa;
        }
        #card-screen h2 {
            color: #d81b60;
        }
        #card-screen img {
            max-width: 100%;
            height: auto;
            border-radius: 10px;
            margin-top: 15px;
        }
    </style>
</head>
<body>

    <!-- 1. ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô -->
    <div id="passcode-screen" class="screen">
        <span id="small-cake">üéÇ</span>
        <h2>‡∏™‡∏∏‡∏Ç‡∏™‡∏±‡∏ô‡∏ï‡πå‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏îüíïüç∞</h2>
        <p>‡πÉ‡∏™‡πà‡∏£‡∏´‡∏±‡∏™ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Å 000000</p>
        
        <!-- ‡∏ä‡πà‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô -->
        <div id="passcode-display"></div>

        <div class="keypad">
            <button class="key" onclick="pressKey('1')">1</button>
            <button class="key" onclick="pressKey('2')">2</button>
            <button class="key" onclick="pressKey('3')">3</button>
            <button class="key" onclick="pressKey('4')">4</button>
            <button class="key" onclick="pressKey('5')">5</button>
            <button class="key" onclick="pressKey('6')">6</button>
            <button class="key" onclick="pressKey('7')">7</button>
            <button class="key" onclick="pressKey('8')">8</button>
            <button class="key" onclick="pressKey('9')">9</button>
            <button class="key" onclick="pressKey('*')">*</button>
            <button class="key" onclick="pressKey('0')">0</button>
            <button class="key" onclick="pressKey('#')">#</button>
        </div>
        <div class="keypad-controls">
            <button class="key-control" onclick="deleteKey()">‡∏•‡∏ö</button>
        </div>
    </div>

    <!-- 2. ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏Ñ‡πâ‡∏Å -->
    <div id="cake-screen" class="screen hidden">
        <h2>‡∏Å‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡πâ‡∏Å‡∏™‡∏¥! ‡∏õ‡∏±‡∏Å‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏ï‡∏≤‡∏°‡πÉ‡∏à‡∏ä‡∏≠‡∏ö</h2>
        <p id="cake-message">‡∏õ‡∏±‡∏Å‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å 5 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</p>
        
        <!-- ‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏π‡∏Å‡∏¢‡πâ‡∏≤‡∏¢‡∏°‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡πÄ‡∏Ñ‡πâ‡∏Å -->
        <svg id="small-letter" onclick="openCard(event)" width="80" height="80" viewBox="0 0 100 100" class="hidden">
            <!-- ‡∏ã‡∏≠‡∏á‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏™‡∏µ‡∏î‡∏≥ -->
            <rect x="5" y="25" width="90" height="60" fill="#212121" rx="5"/>
            <!-- ‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏¥‡∏î‡∏ã‡∏≠‡∏á‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π (‡∏´‡∏±‡∏ß‡πÉ‡∏à) -->
            <polygon points="50,5 5,25 95,25" fill="#d81b60"/>
            <!-- ‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÄ‡∏•‡πá‡∏Å‡πÜ ‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á (‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å) -->
            <path d="M50,45 L55,40 A7,7 0 0,1 65,40 A7,7 0 0,1 65,50 L50,65 L35,50 A7,7 0 0,1 35,40 A7,7 0 0,1 45,40 Z" fill="#ffcdd2"/>
            <text x="50" y="80" font-size="12" fill="#fff" text-anchor="middle">‡πÅ‡∏ï‡∏∞</text>
        </svg>

        <div id="cake-container" onclick="addCandle(event)">
            <!-- SVG Cake Drawing -->
            <svg id="cake-svg" width="300" height="250" viewBox="0 0 400 250"> 
                
                <!-- ‡∏ê‡∏≤‡∏ô‡πÄ‡∏Ñ‡πâ‡∏Å‡∏™‡∏µ‡∏î‡∏≥ -->
                <ellipse cx="200" cy="220" rx="150" ry="20" fill="#212121" /> 
                
                <!-- ‡∏ï‡∏±‡∏ß‡πÄ‡∏Ñ‡πâ‡∏Å‡∏ä‡∏±‡πâ‡∏ô‡∏•‡πà‡∏≤‡∏á (L2) - ‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π‡∏≠‡πà‡∏≠‡∏ô -->
                <rect x="50" y="130" width="300" height="90" fill="#f8bbd0" /> 
                <!-- ‡∏Ç‡∏≠‡∏ö‡∏ä‡∏±‡πâ‡∏ô‡∏•‡πà‡∏≤‡∏á -->
                <ellipse cx="200" cy="130" rx="150" ry="10" fill="#ffcdd2" /> 
                
                <!-- ‡∏ï‡∏±‡∏ß‡πÄ‡∏Ñ‡πâ‡∏Å‡∏ä‡∏±‡πâ‡∏ô‡∏ö‡∏ô (L1) - ‡∏™‡∏µ‡∏î‡∏≥ (‡∏ï‡∏≤‡∏°‡∏£‡∏π‡∏õ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á) -->
                <rect x="100" y="50" width="200" height="80" fill="#212121" /> 
                <!-- ‡∏Ç‡∏≠‡∏ö‡∏ö‡∏ô‡∏™‡∏∏‡∏î (‡∏Ñ‡∏£‡∏µ‡∏°) - ‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π‡πÄ‡∏Ç‡πâ‡∏° -->
                <ellipse cx="200" cy="50" rx="100" ry="10" fill="#d81b60" /> 
                
                <!-- ‡πÄ‡∏Å‡∏•‡πá‡∏î/‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π‡∏ï‡∏≤‡∏°‡∏Ç‡∏≠‡∏ö (Sprockets/Waves) -->
                <path d="M100,130 C120,135 140,125 160,130 C180,135 200,125 220,130 C240,135 260,125 280,130 C300,135 320,125 340,130" 
                      fill="none" stroke="#d81b60" stroke-width="4" stroke-linecap="round"/>
                
                <!-- ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏•‡∏∞‡πÅ‡∏ó‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ JavaScript -->
                
            </svg>
        </div>
        <!-- ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ (‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏õ‡∏£‡∏≤‡∏Å‡∏è) -->
        <div id="instruction-message"></div>
    </div>

    <!-- 3. ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏≠‡∏ß‡∏¢‡∏û‡∏£ -->
    <div id="card-screen" class="screen hidden">
        <h2>‡∏™‡∏∏‡∏Ç‡∏™‡∏±‡∏ô‡∏ï‡πå‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏ô‡∏∞ üíï</h2>
        <div class="card-content">
            <p>
                ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏µ‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∏‡∏Ç‡∏°‡∏≤‡∏Å‡πÜ <br>
                ‡∏Ñ‡∏¥‡∏î‡∏™‡∏¥‡πà‡∏á‡πÉ‡∏î‡∏Ç‡∏≠‡πÉ‡∏´‡πâ‡∏™‡∏°‡∏õ‡∏£‡∏≤‡∏£‡∏ñ‡∏ô‡∏≤ <br>
                Á•ù‰Ω†ÁîüÊó•Âø´‰πê  Â§©Â§©ÂºÄÂøÉ<br>
                 ‚ù§Ô∏è
        </p>
       </p>
            <!-- QR Code (Placeholder - ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏õ‡πá‡∏ô 150x150) -->
            <!-- ******* ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î QR Code ‡πÄ‡∏õ‡πá‡∏ô 150x150 ******* -->
            <img src="2.jpg" alt="QR Code Link" style="width: 170px; height: 190px;">
            
            <!-- ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö (Placeholder - ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏õ‡πá‡∏ô 300x300 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏µ‡πà‡∏¢‡∏°‡∏à‡∏±‡∏ï‡∏∏‡∏£‡∏±‡∏™) -->
            <!-- ******* ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏π‡∏õ‡∏Ñ‡∏π‡πà‡πÄ‡∏õ‡πá‡∏ô 300x300 ******* -->
            <img src="1.gif?text=‡πÉ‡∏™‡πà‡∏£‡∏π‡∏õ‡∏Ñ‡∏π‡πà‡πÅ‡∏ó‡∏ô‡πÑ‡∏î‡πâ‡∏ô‡∏∞" alt="‡∏†‡∏≤‡∏û‡∏Ñ‡∏π‡πà" onerror="this.onerror=null; this.src='1.giftext=Error%20Image';">
        </div>
    </div>
    
    
    
    
    <script>
        // --- JavaScript: ‡∏ï‡∏£‡∏£‡∏Å‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ---

        // üéÇ ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤
        const correctPasscode = "000000"; 
        const passcodeLength = correctPasscode.length;
        let enteredPasscode = ""; 
        const totalCandles = 5;
        let candleCount = 0; 
        
        const candleColors = ["#80cbc4", "#fff59d", "#ff8a65", "#ce93d8", "#e6ee9c"]; 
        
        const CAKE_TOP_Y = 50; 
        const CAKE_TOP_WIDTH = 200; 
        const CAKE_LEFT_X = 100;

        // üéÇ ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Keypad
        function pressKey(key) {
            if (enteredPasscode.length < passcodeLength) {
                enteredPasscode += key;
                updatePasscodeDisplay();

                if (enteredPasscode.length === passcodeLength) {
                    checkPasscode();
                }
            }
        }

        function deleteKey() {
            enteredPasscode = enteredPasscode.slice(0, -1);
            updatePasscodeDisplay();
        }

        function updatePasscodeDisplay() {
            const displayElement = document.getElementById("passcode-display");
            displayElement.innerHTML = ''; 

            for (let i = 0; i < passcodeLength; i++) {
                const digitDiv = document.createElement('div');
                digitDiv.classList.add('passcode-digit');
                
                if (i < enteredPasscode.length) {
                    digitDiv.textContent = enteredPasscode[i];
                } else {
                    digitDiv.textContent = ' '; // ‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏™‡πâ‡∏ô‡πÉ‡∏ï‡πâ
                }
                displayElement.appendChild(digitDiv);
            }
        }

        function checkPasscode() {
            setTimeout(() => {
                if (enteredPasscode === correctPasscode) {
                    document.getElementById("passcode-screen").classList.add("hidden");
                    document.getElementById("cake-screen").classList.remove("hidden");
                } else {
                    const messageBox = document.createElement('div');
                    messageBox.textContent = "‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! ‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏∞";
                    messageBox.style.cssText = 'position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background: #d81b60; color: white; padding: 15px 30px; border-radius: 10px; z-index: 9999; box-shadow: 0 4px 10px rgba(0,0,0,0.3);';
                    document.body.appendChild(messageBox);
                    
                    setTimeout(() => {
                        document.body.removeChild(messageBox);
                    }, 1500); 

                    enteredPasscode = "";
                    updatePasscodeDisplay();
                }
            }, 300);
        }
        
        window.onload = updatePasscodeDisplay;

        // üéÇ ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ö‡∏ô‡πÄ‡∏Ñ‡πâ‡∏Å
        function addCandle(event) {
            if (candleCount < totalCandles) {
                
                const container = document.getElementById('cake-container');
                const containerRect = container.getBoundingClientRect();
                
                const x = event.clientX - containerRect.left; 
                const svgX = x * (400 / containerRect.width);

                // ** ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ö‡∏ô‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡πâ‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß **

                const candleHeight = Math.floor(Math.random() * 21) + 35; 
                const randomColor = candleColors[Math.floor(Math.random() * candleColors.length)];

                // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á Y ‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏õ‡∏±‡∏Å‡∏ö‡∏ô‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ñ‡πâ‡∏Å‡∏ö‡∏ô‡∏™‡∏∏‡∏î‡πÄ‡∏™‡∏°‡∏≠ (CAKE_TOP_Y = 50 ‡πÉ‡∏ô viewBox)
                const T_X = svgX; 
                const T_Y = CAKE_TOP_Y; 
                
                const svg = document.getElementById('cake-svg');

                const g = document.createElementNS('http://www.w3.org/2000/svg', 'g');
                g.setAttribute('class', 'candle');
                g.setAttribute('transform', `translate(${T_X}, ${T_Y - candleHeight})`); 

                // ‡πÅ‡∏ó‡πà‡∏á‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô (Rect)
                const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');
                rect.setAttribute('x', '-3'); 
                rect.setAttribute('y', '0'); 
                rect.setAttribute('width', '6');
                rect.setAttribute('height', candleHeight.toString());
                rect.setAttribute('rx', '1'); 
                rect.setAttribute('ry', '1');
                rect.setAttribute('fill', randomColor); 
                rect.setAttribute('class', 'candle-wax'); 

                // ‡πÄ‡∏õ‡∏•‡∏ß‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô (‡∏ß‡∏á‡∏Å‡∏•‡∏°)
                const flame = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
                flame.setAttribute('cx', '0');
                flame.setAttribute('cy', '-2');
                flame.setAttribute('r', '3');
                flame.setAttribute('fill', '#ff9800'); 
                flame.setAttribute('class', 'candle-flame'); 

                // ‡πÅ‡∏™‡∏á‡πÄ‡∏õ‡∏•‡∏ß‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô (‡∏ß‡∏á‡∏Å‡∏•‡∏°‡πÄ‡∏•‡πá‡∏Å)
                const innerFlame = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
                innerFlame.setAttribute('cx', '0');
                innerFlame.setAttribute('cy', '-2');
                innerFlame.setAttribute('r', '1.5');
                innerFlame.setAttribute('fill', '#ffeb3b'); 
                innerFlame.setAttribute('class', 'candle-flame'); 
                innerFlame.style.animationDelay = '-0.2s'; 

                g.appendChild(rect);
                g.appendChild(flame);
                g.appendChild(innerFlame);
                svg.appendChild(g);

                candleCount++;
                
                setTimeout(() => {
                    g.style.opacity = 1;
                }, 10);
                
                const messageElement = document.getElementById("cake-message");
                const remaining = totalCandles - candleCount;
                messageElement.textContent = `‡∏õ‡∏±‡∏Å‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å ${remaining} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á`;

                if (candleCount === totalCandles) {
                    // ‡∏ã‡πà‡∏≠‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "‡∏õ‡∏±‡∏Å‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å..." ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
                    messageElement.classList.add('hidden'); 
                    showLetter();
                }
            }
        }

        function showLetter() {
            const letter = document.getElementById("small-letter");
            const instructionMessage = document.getElementById("instruction-message");
            
            setTimeout(() => {
                // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏≥ class 'hidden' ‡∏≠‡∏≠‡∏Å ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏õ‡∏£‡∏≤‡∏Å‡∏è‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏•‡∏≤‡∏á
                letter.classList.remove('hidden');

                // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
                instructionMessage.innerHTML = `
                    <p style="color: #d81b60; font-weight: bold;">
                        ‡πÄ‡∏¢‡πâ! ‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡∏≠‡∏ò‡∏¥‡∏©‡∏ê‡∏≤‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞ ü•≥
                    </p>
                    <p style="color: #d81b60; font-weight: bold; margin-top: 5px;">
                        üíå ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡∏≥‡∏≠‡∏ß‡∏¢‡∏û‡∏£
                    </p>
                `;
            }, 500);
        }

        function openCard(event) {
            event.stopPropagation(); 
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏à‡∏î‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏π‡∏Å‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ class 'hidden')
            if (!document.getElementById("small-letter").classList.contains('hidden')) {
                document.getElementById("cake-screen").classList.add("hidden");
                document.getElementById("card-screen").classList.remove("hidden");
            }
        }

    </script>

</body>
</html>
